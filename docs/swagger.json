{
    "swagger": "2.0",
    "info": {
        "title": "Process-Sync-Api",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "basePath": "/",
    "paths": {
        "/deployments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list deployments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment"
                ],
                "summary": "list deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default id.asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "add the fields 'diagram', 'definition_id' and 'error' to the results",
                        "name": "extended",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of network-ids used to filter the deployments",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Deployment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deployments/{networkId}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "deploy process; prepared process may be requested from the process-fog-deployment service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment"
                ],
                "summary": "deploy process",
                "parameters": [
                    {
                        "description": "deployment",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deploymentmodel.Deployment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deployments/{networkId}/{deploymentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get deployment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment"
                ],
                "summary": "get deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete deployment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment"
                ],
                "summary": "delete deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deployments/{networkId}/{deploymentId}/metadata": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get deployment metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment",
                    "metadata"
                ],
                "summary": "get deployment metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DeploymentMetadata"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deployments/{networkId}/{deploymentId}/start": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "start deployed process; a process may expect parameters on start. these can be passed as query parameters. swagger allows no arbitrary/dynamic parameter names, which means a query with parameters must be executed manually",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment"
                ],
                "summary": "start deployed process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "business_key of new process instance",
                        "name": "business_key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/history/process-instances": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list historic process-instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-instance"
                ],
                "summary": "list historic process-instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default id.asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of network-ids, used to filter the result",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process-definition-id, used to filter the result",
                        "name": "processDefinitionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state may be 'finished' or 'unfinished', used to filter the result",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "if set to true, wraps the result in an objet with the result {total:0, data:[]}",
                        "name": "with_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.HistoricProcessInstance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/history/process-instances/{networkId}/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get historic process-instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-instance"
                ],
                "summary": "get historic process-instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HistoricProcessInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get historic process-instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-instance"
                ],
                "summary": "get historic process-instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/incidents": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list incidents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "list incidents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "default 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default id.asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of network-ids, used to filter the result",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process-instance-id, used to filter the result",
                        "name": "process_instance_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Incident"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/incidents/{networkId}/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get incident",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "get incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "incident id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Incident"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete incident",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "delete incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "incident id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/metadata/{networkId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list deployment metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment",
                    "metadata"
                ],
                "summary": "list deployment metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deployment id",
                        "name": "deployment_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "camunda deployment id",
                        "name": "camunda_deployment_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DeploymentMetadata"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/networks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list networks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "list networks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hub"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/process-definitions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list process-definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-definitions"
                ],
                "summary": "list process-definitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "default 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default id.asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of network-ids used to filter",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ProcessDefinition"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/process-definitions/{networkId}/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get process-definition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-definitions"
                ],
                "summary": "get process-definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process definition id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProcessDefinition"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/process-instances": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list process-instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-instance"
                ],
                "summary": "list process-instances",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "default 100",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "default 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "default id.asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of network-ids used to filter",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ProcessInstance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/process-instances/{networkId}/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get process-instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-instance"
                ],
                "summary": "get process-instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HistoricProcessInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get process-instances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process-instance"
                ],
                "summary": "get process-instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/sync/deployments/{networkId}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "resync deployments that are registered as lost on the mgw side. can only be tried once.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployment"
                ],
                "summary": "resync deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "deploymentmodel.Deployment": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "diagram": {
                    "$ref": "#/definitions/models.Diagram"
                },
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Element"
                    }
                },
                "executable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "incident_handling": {
                    "$ref": "#/definitions/models.IncidentHandling"
                },
                "name": {
                    "type": "string"
                },
                "start_parameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProcessStartParameter"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "github_com_SENERGY-Platform_process-sync_pkg_model_camundamodel.Variable": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {},
                "valueInfo": {}
            }
        },
        "model.Deployment": {
            "type": "object",
            "properties": {
                "deploymentTime": {},
                "id": {
                    "type": "string"
                },
                "is_placeholder": {
                    "type": "boolean"
                },
                "marked_as_missing": {
                    "type": "boolean"
                },
                "marked_for_delete": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "sync_date": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "model.DeploymentMetadata": {
            "type": "object",
            "properties": {
                "camunda_deployment_id": {
                    "type": "string"
                },
                "deployment_model": {
                    "$ref": "#/definitions/model.DeploymentWithEventDesc"
                },
                "is_placeholder": {
                    "type": "boolean"
                },
                "marked_as_missing": {
                    "type": "boolean"
                },
                "marked_for_delete": {
                    "type": "boolean"
                },
                "network_id": {
                    "type": "string"
                },
                "process_parameter": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_SENERGY-Platform_process-sync_pkg_model_camundamodel.Variable"
                    }
                },
                "sync_date": {
                    "type": "string"
                }
            }
        },
        "model.DeploymentWithEventDesc": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "device_id_to_local_id": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "diagram": {
                    "$ref": "#/definitions/models.Diagram"
                },
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Element"
                    }
                },
                "event_descriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EventDesc"
                    }
                },
                "executable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "incident_handling": {
                    "$ref": "#/definitions/models.IncidentHandling"
                },
                "name": {
                    "type": "string"
                },
                "service_id_to_local_id": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "start_parameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProcessStartParameter"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "model.EventDesc": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "characteristic_id": {
                    "description": "marshaller info",
                    "type": "string"
                },
                "deployment_id": {
                    "description": "search info",
                    "type": "string"
                },
                "device_group_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "import_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "qos": {
                    "type": "integer"
                },
                "script": {
                    "description": "worker info",
                    "type": "string"
                },
                "service_for_marshaller": {
                    "description": "set by event-manager\nmay be\n\t- the service from EventDesc.ConditionalEvent.Selection.SelectedServiceId\n\t- or an artificial service for EventDesc.ConditionalEvent.Selection.SelectedImportId",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Service"
                        }
                    ]
                },
                "service_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value_variable": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "model.HistoricProcessInstance": {
            "type": "object",
            "properties": {
                "businessKey": {
                    "type": "string"
                },
                "caseInstanceId": {
                    "type": "string"
                },
                "deleteReason": {
                    "type": "string"
                },
                "durationInMillis": {
                    "type": "number"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_placeholder": {
                    "type": "boolean"
                },
                "marked_as_missing": {
                    "type": "boolean"
                },
                "marked_for_delete": {
                    "type": "boolean"
                },
                "network_id": {
                    "type": "string"
                },
                "processDefinitionId": {
                    "type": "string"
                },
                "processDefinitionKey": {
                    "type": "string"
                },
                "processDefinitionName": {
                    "type": "string"
                },
                "processDefinitionVersion": {
                    "type": "number"
                },
                "startActivityId": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startUserId": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "superCaseInstanceId": {
                    "type": "string"
                },
                "superProcessInstanceId": {
                    "type": "string"
                },
                "sync_date": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "model.Incident": {
            "type": "object",
            "properties": {
                "business_key": {
                    "type": "string"
                },
                "deployment_name": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "external_task_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_placeholder": {
                    "type": "boolean"
                },
                "marked_as_missing": {
                    "type": "boolean"
                },
                "marked_for_delete": {
                    "type": "boolean"
                },
                "msg_version": {
                    "description": "from version 3 onward will be set in KafkaIncidentsCommand and be copied to this field",
                    "type": "integer"
                },
                "network_id": {
                    "type": "string"
                },
                "process_definition_id": {
                    "type": "string"
                },
                "process_instance_id": {
                    "type": "string"
                },
                "sync_date": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "worker_id": {
                    "type": "string"
                }
            }
        },
        "model.ProcessDefinition": {
            "type": "object",
            "properties": {
                "Version": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "deploymentId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diagram": {
                    "type": "string"
                },
                "historyTimeToLive": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_placeholder": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "marked_as_missing": {
                    "type": "boolean"
                },
                "marked_for_delete": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "sync_date": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "versionTag": {
                    "type": "string"
                }
            }
        },
        "model.ProcessInstance": {
            "type": "object",
            "properties": {
                "businessKey": {
                    "type": "string"
                },
                "caseInstanceId": {
                    "type": "string"
                },
                "definitionId": {
                    "type": "string"
                },
                "ended": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_placeholder": {
                    "type": "boolean"
                },
                "marked_as_missing": {
                    "type": "boolean"
                },
                "marked_for_delete": {
                    "type": "boolean"
                },
                "network_id": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "sync_date": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "models.AspectNode": {
            "type": "object",
            "properties": {
                "ancestor_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "descendent_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "root_id": {
                    "type": "string"
                }
            }
        },
        "models.Attribute": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ConditionalEvent": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "qos": {
                    "type": "integer"
                },
                "script": {
                    "type": "string"
                },
                "selection": {
                    "$ref": "#/definitions/models.Selection"
                },
                "value_variable": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Configurable": {
            "type": "object",
            "properties": {
                "aspect_node": {
                    "$ref": "#/definitions/models.AspectNode"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "models.Content": {
            "type": "object",
            "properties": {
                "content_variable": {
                    "$ref": "#/definitions/models.ContentVariable"
                },
                "id": {
                    "type": "string"
                },
                "protocol_segment_id": {
                    "type": "string"
                },
                "serialization": {
                    "$ref": "#/definitions/models.Serialization"
                }
            }
        },
        "models.ContentVariable": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_void": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "omit_empty": {
                    "type": "boolean"
                },
                "serialization_options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub_content_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContentVariable"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.Type"
                },
                "unit_reference": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "models.Diagram": {
            "type": "object",
            "properties": {
                "svg": {
                    "type": "string"
                },
                "xml_deployed": {
                    "type": "string"
                },
                "xml_raw": {
                    "type": "string"
                }
            }
        },
        "models.Element": {
            "type": "object",
            "properties": {
                "bpmn_id": {
                    "type": "string"
                },
                "conditional_event": {
                    "$ref": "#/definitions/models.ConditionalEvent"
                },
                "group": {
                    "type": "string"
                },
                "message_event": {
                    "$ref": "#/definitions/models.MessageEvent"
                },
                "name": {
                    "type": "string"
                },
                "notification": {
                    "$ref": "#/definitions/models.Notification"
                },
                "order": {
                    "type": "integer"
                },
                "task": {
                    "$ref": "#/definitions/models.Task"
                },
                "time_event": {
                    "$ref": "#/definitions/models.TimeEvent"
                }
            }
        },
        "models.GenericEventSource": {
            "type": "object",
            "properties": {
                "filter_ids": {
                    "type": "string"
                },
                "filter_type": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "models.Hub": {
            "type": "object",
            "properties": {
                "device_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "device_local_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                }
            }
        },
        "models.Import": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImportConfig"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "import_type_id": {
                    "type": "string"
                },
                "kafka_topic": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "restart": {
                    "type": "boolean"
                }
            }
        },
        "models.ImportConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "models.ImportContentVariable": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sub_content_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImportContentVariable"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.Type"
                },
                "use_as_tag": {
                    "type": "boolean"
                }
            }
        },
        "models.ImportType": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImportConfig"
                    }
                },
                "default_restart": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "output": {
                    "$ref": "#/definitions/models.ImportContentVariable"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "models.IncidentHandling": {
            "type": "object",
            "properties": {
                "notify": {
                    "type": "boolean"
                },
                "restart": {
                    "type": "boolean"
                }
            }
        },
        "models.Interaction": {
            "type": "string",
            "enum": [
                "event",
                "request",
                "event+request"
            ],
            "x-enum-varnames": [
                "EVENT",
                "REQUEST",
                "EVENT_AND_REQUEST"
            ]
        },
        "models.MessageEvent": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "flow_id": {
                    "type": "string"
                },
                "selection": {
                    "$ref": "#/definitions/models.Selection"
                },
                "use_marshaller": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Notification": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.PathOption": {
            "type": "object",
            "properties": {
                "aspectNode": {
                    "$ref": "#/definitions/models.AspectNode"
                },
                "characteristicId": {
                    "type": "string"
                },
                "configurables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Configurable"
                    }
                },
                "functionId": {
                    "type": "string"
                },
                "isVoid": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "models.ProcessFilterCriteria": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "device_class_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                }
            }
        },
        "models.ProcessStartParameter": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Selection": {
            "type": "object",
            "properties": {
                "filter_criteria": {
                    "$ref": "#/definitions/models.ProcessFilterCriteria"
                },
                "selected_device_group_id": {
                    "type": "string"
                },
                "selected_device_id": {
                    "type": "string"
                },
                "selected_generic_event_source": {
                    "$ref": "#/definitions/models.GenericEventSource"
                },
                "selected_import_id": {
                    "type": "string"
                },
                "selected_path": {
                    "$ref": "#/definitions/models.PathOption"
                },
                "selected_service_id": {
                    "type": "string"
                },
                "selection_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SelectionOption"
                    }
                }
            }
        },
        "models.SelectionDevice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SelectionDeviceGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SelectionOption": {
            "type": "object",
            "properties": {
                "device": {
                    "$ref": "#/definitions/models.SelectionDevice"
                },
                "device_group": {
                    "$ref": "#/definitions/models.SelectionDeviceGroup"
                },
                "import": {
                    "$ref": "#/definitions/models.Import"
                },
                "importType": {
                    "$ref": "#/definitions/models.ImportType"
                },
                "path_options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.PathOption"
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SelectionService"
                    }
                }
            }
        },
        "models.SelectionService": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Serialization": {
            "type": "string",
            "enum": [
                "xml",
                "json",
                "plain-text"
            ],
            "x-enum-varnames": [
                "XML",
                "JSON",
                "PlainText"
            ]
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attribute"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Content"
                    }
                },
                "interaction": {
                    "$ref": "#/definitions/models.Interaction"
                },
                "local_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Content"
                    }
                },
                "protocol_id": {
                    "type": "string"
                },
                "service_group_key": {
                    "type": "string"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "parameter": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "prefer_event": {
                    "type": "boolean"
                },
                "retries": {
                    "type": "integer"
                },
                "selection": {
                    "$ref": "#/definitions/models.Selection"
                }
            }
        },
        "models.TimeEvent": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Type": {
            "type": "string",
            "enum": [
                "https://schema.org/Text",
                "https://schema.org/Integer",
                "https://schema.org/Float",
                "https://schema.org/Boolean",
                "https://schema.org/ItemList",
                "https://schema.org/StructuredValue"
            ],
            "x-enum-varnames": [
                "String",
                "Integer",
                "Float",
                "Boolean",
                "List",
                "Structure"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}